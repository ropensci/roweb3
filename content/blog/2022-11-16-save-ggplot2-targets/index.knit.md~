---
slug: "save-ggplot2-targets"
title: How to Save ggplot2 plots in a targets Workflow?
author:
  - Matthias Greni√©
# Set the date below to the publication date of your post
date: 2020-03-10
# Minimal tags for a post about a community-contributed package 
# that has passed software peer review are listed below
# Consult the Technical Guidelines for information on choosing tags
tags:
  - targets
  - ggplot2
  - workflow
  - tech notes
# The summary below will be used by e.g. Twitter cards
description: "A very short summary of your post (~ 100 characters)"
# If you have no preferred image for Twitter cards,
# delete the twitterImg and twitterAlt lines below 
# - Replace "blog" with "technotes" as needed
# - Note no "/" symbol before "blog" here
# - Note "/" between year/month/day
twitterImg: blog/2019/06/04/post-template/name-of-image.png
twitterAlt: "Alternative description of the image"
# the text below is for populating the "share on Twitter" button
# if deleted, the title of the post will be used
tweet: "A post about blabla by @username!"
---



Citation of the primary literature[^1]. 

Citation of a website[^2]. 

Citation of an R package[^3].

### Subsection heading

We recommend the use of [Hugo shortcodes](https://gohugo.io/content-management/shortcodes/) to include images, tweets, videos, gists, etc. In the Rmd file they need to be between `<!--html_preserve-->` and `<!--/html_preserve-->`.

**Add an image** by using a Hugo shortcode. The image is saved under `/content/blog/YYYY-MM-DD-slug/name-of-image.png`.

<!--html_preserve-->
{{< figure src = "name-of-image.png" width = "400" alt = "this is the alternative text" >}}
<!--/html_preserve-->

Below is another image, a plot generated by a code chunk, so you might see how to add alternative text and other options in this case. You can also use [all options documented for the figure shortcode](https://gohugo.io/content-management/shortcodes/#figure) except for `src` that will be created automatically when knitting.

```r 
plot(1:10)
```
{{<figure src="chunkname-1.png" alt="alternative text please make it informative" caption="this is what this image shows, write it here or in the paragraph after the image as you prefer" width="300">}}

Once this file is knitted the plot above will be inserted with the correct syntax.
<!--html_preserve-->
{{< tweet user="SanDiegoZoo" id="1453110110599868418" >}}
<!--/html_preserve-->

I really enjoy using [`targets`](https://doc.ropensci.org/targets) for all of my data analysis projects. They help me structure all of the projects nicely in the same folder. For them I often produce several figures using `ggplot2`. I want to keep my plots accessible to be able to revisit them anytime and to assemble them with `patchwork` into more complex figures for a potential paper. In a regular project I generate 10 to 20 figures, some only diagnostic ones and some final polished one for the potential finished manuscript. I do revisit the list of figures often, as co-authors or reviewers ask me for more detailed analyses and visualizations.

In most cases, I don't know before hand the sizes of the figures, so I like to save the ggplot2 plots as R objects and not images in my `targets` workflow. I sometimes edit them for a presentation, a paper, or a poster, so I like to the flexibility of saving them as R objects.

However, there are no formal recommendations to save ggplot2 objects in targets workflow. These can have different consequences for the size of stored cache, the loading time, the flexibility, and ease of use of the plots.

In this blog post I explore the different possible options and discuss their pros and cons, with some insights from both `ggplot2` and `targets` communities. I will show the consequences of using each one of them through a simple workflow making a plot with the `mtcars` dataset.


## First solution: saving the entire `ggplot2` objects without worrying

My first solution was to not worry about the plots and leverage the very clever system from targets that saves object.

Let's say our workflow loads the data and make a simple plot:



